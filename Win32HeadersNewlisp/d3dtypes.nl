(context 'WIN32)













(setq D3DVALUE float)
(setq LPD3DVALUE (string float "*"))
(setq D3DFIXED LONG)
(setq LPD3DVALIDATECALLBACK (string VOID "*"))
(setq LPD3DENUMTEXTUREFORMATSCALLBACK (string VOID "*"))
(setq LPD3DENUMPIXELFORMATSCALLBACK (string VOID "*"))
(setq D3DMATERIALHANDLE DWORD)
(setq LPD3DMATERIALHANDLE (string DWORD "*"))
(setq D3DTEXTUREHANDLE DWORD)
(setq LPD3DTEXTUREHANDLE (string DWORD "*"))
(setq D3DMATRIXHANDLE DWORD)
(setq LPD3DMATRIXHANDLE (string DWORD "*"))
(setq D3DCOLORMODEL DWORD)
(setq D3DCOLOR DWORD)

;; typedef struct _D3DCOLORVALUE { {
(struct '_D3DCOLORVALUE
    D3DVALUE ; dvR
    D3DVALUE ; dvG
    D3DVALUE ; dvB
    D3DVALUE ; dvA
)
(setq D3DCOLORVALUE _D3DCOLORVALUE)
;; } D3DCOLORVALUE
(setq LPD3DCOLORVALUE (string _D3DCOLORVALUE "*"))

;; typedef struct _D3DVECTOR { {
(struct '_D3DVECTOR
    D3DVALUE ; dvX
    D3DVALUE ; dvY
    D3DVALUE ; dvZ
)
(setq D3DVECTOR _D3DVECTOR)
;; } D3DVECTOR
(setq LPD3DVECTOR (string _D3DVECTOR "*"))

;; typedef struct _D3DRECT { {
(struct '_D3DRECT
    LONG ; lX1
    LONG ; lY1
    LONG ; lX2
    LONG ; lY2
)
(setq D3DRECT _D3DRECT)
;; } D3DRECT
(setq LPD3DRECT (string _D3DRECT "*"))






;; mask DWORD d3dpvFlags {
(setq D3DPV_DONOTCOPYDATA 1)
;; };

;; mask DWORD d3dclearFlags {
(setq D3DCLEAR_TARGET 0x00000001l)
(setq D3DCLEAR_ZBUFFER 0x00000002l)
(setq D3DCLEAR_STENCIL 0x00000004l)
;; };

;; mask DWORD d3dclipFlags {
(setq D3DCLIP_LEFT 0x00000001L)
(setq D3DCLIP_RIGHT 0x00000002L)
(setq D3DCLIP_TOP 0x00000004L)
(setq D3DCLIP_BOTTOM 0x00000008L)
(setq D3DCLIP_FRONT 0x00000010L)
(setq D3DCLIP_BACK 0x00000020L)
(setq D3DCLIP_GEN0 0x00000040L)
(setq D3DCLIP_GEN1 0x00000080L)
(setq D3DCLIP_GEN2 0x00000100L)
(setq D3DCLIP_GEN3 0x00000200L)
(setq D3DCLIP_GEN4 0x00000400L)
(setq D3DCLIP_GEN5 0x00000800L)
;; };

;; mask DWORD d3dtriflagFlags {
(setq D3DTRIFLAG_START 0x00000000L)
(setq D3DTRIFLAG_ODD 0x0000001eL)
(setq D3DTRIFLAG_EVEN 0x0000001fL)
(setq D3DTRIFLAG_EDGEENABLE1 0x00000100L)
(setq D3DTRIFLAG_EDGEENABLE2 0x00000200L)
(setq D3DTRIFLAG_EDGEENABLE3 0x00000400L)
;; };

;; mask DWORD d3dclipstatusFlags {
(setq D3DCLIPSTATUS_STATUS 0x00000001L)
(setq D3DCLIPSTATUS_EXTENTS2 0x00000002L)
(setq D3DCLIPSTATUS_EXTENTS3 0x00000004L)
;; };

;; mask DWORD d3dsetstatusFlags {
(setq D3DSETSTATUS_STATUS 0x00000001L)
(setq D3DSETSTATUS_EXTENTS 0x00000002L)
;; };

;; mask DWORD d3dwrapcoordFlags {
(setq D3DWRAPCOORD_0 0x00000001L)
(setq D3DWRAPCOORD_1 0x00000002L)
(setq D3DWRAPCOORD_2 0x00000004L)
(setq D3DWRAPCOORD_3 0x00000008L)
;; };

;; mask DWORD d3dvisFlags {
(setq D3DVIS_INSIDE_FRUSTUM 0)
(setq D3DVIS_INTERSECT_FRUSTUM 1)
(setq D3DVIS_OUTSIDE_FRUSTUM 2)
(setq D3DVIS_INSIDE_LEFT 0)
(setq D3DVIS_INTERSECT_LEFT 4)
(setq D3DVIS_OUTSIDE_LEFT 8)
(setq D3DVIS_INSIDE_RIGHT 0)
(setq D3DVIS_INTERSECT_RIGHT 16)
(setq D3DVIS_OUTSIDE_RIGHT 32)
(setq D3DVIS_INSIDE_TOP 0)
(setq D3DVIS_INTERSECT_TOP 64)
(setq D3DVIS_OUTSIDE_TOP 128)
(setq D3DVIS_INSIDE_BOTTOM 0)
(setq D3DVIS_INTERSECT_BOTTOM 256)
(setq D3DVIS_OUTSIDE_BOTTOM 512)
(setq D3DVIS_INSIDE_NEAR 0)
(setq D3DVIS_INTERSECT_NEAR 1024)
(setq D3DVIS_OUTSIDE_NEAR 2048)
(setq D3DVIS_INSIDE_FAR 0)
(setq D3DVIS_INTERSECT_FAR 4096)
(setq D3DVIS_OUTSIDE_FAR 8192)
;; };

;; mask DWORD d3dexecuteFlags {
(setq D3DEXECUTE_CLIPPED 0x00000001l)
(setq D3DEXECUTE_UNCLIPPED 0x00000002l)
;; };

;; mask DWORD d3dvopFlags {
(setq D3DVOP_LIGHT 1024)
(setq D3DVOP_TRANSFORM 1)
(setq D3DVOP_CLIP 4)
(setq D3DVOP_EXTENTS 8)
;; };

;; mask DWORD d3dtaFlags {
(setq D3DTA_SELECTMASK 0x0000000f)
(setq D3DTA_DIFFUSE 0x00000000)
(setq D3DTA_CURRENT 0x00000001)
(setq D3DTA_TEXTURE 0x00000002)
(setq D3DTA_TFACTOR 0x00000003)
(setq D3DTA_SPECULAR 0x00000004)
(setq D3DTA_COMPLEMENT 0x00000010)
(setq D3DTA_ALPHAREPLICATE 0x00000020)
;; };

;; mask DWORD d3ddevinfoidFlags {
(setq D3DDEVINFOID_TEXTUREMANAGER 1)
(setq D3DDEVINFOID_D3DTEXTUREMANAGER 2)
(setq D3DDEVINFOID_TEXTURING 3)
;; };

;; mask DWORD d3dlightFlags {
(setq D3DLIGHT_ACTIVE 0x00000001)
(setq D3DLIGHT_NO_SPECULAR 0x00000002)
(setq D3DLIGHT_ALL 3)
;; };

;; mask DWORD d3dwrapFlags {
(setq D3DWRAP_U 0x00000001L)
(setq D3DWRAP_V 0x00000002L)
;; };

;; mask DWORD d3dtssFlags {
(setq D3DTSS_TCI_PASSTHRU 0x00000000)
(setq D3DTSS_TCI_CAMERASPACENORMAL 0x00010000)
(setq D3DTSS_TCI_CAMERASPACEPOSITION 0x00020000)
(setq D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR 0x00030000)
;; };

;; mask DWORD d3dtransformFlags {
(setq D3DTRANSFORM_CLIPPED 0x00000001l)
(setq D3DTRANSFORM_UNCLIPPED 0x00000002l)
;; };

;; mask DWORD d3dpalFlags {
(setq D3DPAL_FREE 0x00)
(setq D3DPAL_READONLY 0x40)
(setq D3DPAL_RESERVED 0x80)
;; };

;; mask DWORD d3dvbcapsFlags {
(setq D3DVBCAPS_SYSTEMMEMORY 0x00000800l)
(setq D3DVBCAPS_WRITEONLY 0x00010000l)
(setq D3DVBCAPS_OPTIMIZED 0x80000000l)
(setq D3DVBCAPS_DONOTCLIP 0x00000001l)
;; };

;; mask DWORD d3dcolorFlags {
(setq D3DCOLOR_MONO 1)
(setq D3DCOLOR_RGB 2)
;; };

;; mask DWORD d3denumretFlags {
(setq D3DENUMRET_CANCEL 1)
(setq D3DENUMRET_OK 0)
;; };

;; mask DWORD d3dstateFlags {
(setq D3DSTATE_OVERRIDE_BIAS 256)
;; };

;; mask DWORD d3drenderstateFlags {
(setq D3DRENDERSTATE_BLENDENABLE 27)
(setq D3DRENDERSTATE_WRAPBIAS 128UL)
;; };

;; mask DWORD d3dfvfFlags {
(setq D3DFVF_RESERVED0 0x001)
(setq D3DFVF_POSITION_MASK 0x00E)
(setq D3DFVF_XYZ 0x002)
(setq D3DFVF_XYZRHW 0x004)
(setq D3DFVF_XYZB1 0x006)
(setq D3DFVF_XYZB2 0x008)
(setq D3DFVF_XYZB3 0x00a)
(setq D3DFVF_XYZB4 0x00c)
(setq D3DFVF_XYZB5 0x00e)
(setq D3DFVF_NORMAL 0x010)
(setq D3DFVF_RESERVED1 0x020)
(setq D3DFVF_DIFFUSE 0x040)
(setq D3DFVF_SPECULAR 0x080)
(setq D3DFVF_TEXCOUNT_MASK 0xf00)
(setq D3DFVF_TEXCOUNT_SHIFT 8)
(setq D3DFVF_TEX0 0x000)
(setq D3DFVF_TEX1 0x100)
(setq D3DFVF_TEX2 0x200)
(setq D3DFVF_TEX3 0x300)
(setq D3DFVF_TEX4 0x400)
(setq D3DFVF_TEX5 0x500)
(setq D3DFVF_TEX6 0x600)
(setq D3DFVF_TEX7 0x700)
(setq D3DFVF_TEX8 0x800)
(setq D3DFVF_RESERVED2 0xf000)
(setq D3DFVF_VERTEX 0x00000112)
(setq D3DFVF_LVERTEX 0x000001E2)
(setq D3DFVF_TLVERTEX 0x000001C4)
(setq D3DFVF_TEXTUREFORMAT2 0)
(setq D3DFVF_TEXTUREFORMAT1 3)
(setq D3DFVF_TEXTUREFORMAT3 1)
(setq D3DFVF_TEXTUREFORMAT4 2)
;; };

;; mask DWORD d3dstatusFlags {
(setq D3DSTATUS_CLIPUNIONLEFT 1)
(setq D3DSTATUS_CLIPUNIONRIGHT 2)
(setq D3DSTATUS_CLIPUNIONTOP 4)
(setq D3DSTATUS_CLIPUNIONBOTTOM 8)
(setq D3DSTATUS_CLIPUNIONFRONT 16)
(setq D3DSTATUS_CLIPUNIONBACK 32)
(setq D3DSTATUS_CLIPUNIONGEN0 64)
(setq D3DSTATUS_CLIPUNIONGEN1 128)
(setq D3DSTATUS_CLIPUNIONGEN2 256)
(setq D3DSTATUS_CLIPUNIONGEN3 512)
(setq D3DSTATUS_CLIPUNIONGEN4 1024)
(setq D3DSTATUS_CLIPUNIONGEN5 2048)
(setq D3DSTATUS_CLIPINTERSECTIONLEFT 0x00001000L)
(setq D3DSTATUS_CLIPINTERSECTIONRIGHT 0x00002000L)
(setq D3DSTATUS_CLIPINTERSECTIONTOP 0x00004000L)
(setq D3DSTATUS_CLIPINTERSECTIONBOTTOM 0x00008000L)
(setq D3DSTATUS_CLIPINTERSECTIONFRONT 0x00010000L)
(setq D3DSTATUS_CLIPINTERSECTIONBACK 0x00020000L)
(setq D3DSTATUS_CLIPINTERSECTIONGEN0 0x00040000L)
(setq D3DSTATUS_CLIPINTERSECTIONGEN1 0x00080000L)
(setq D3DSTATUS_CLIPINTERSECTIONGEN2 0x00100000L)
(setq D3DSTATUS_CLIPINTERSECTIONGEN3 0x00200000L)
(setq D3DSTATUS_CLIPINTERSECTIONGEN4 0x00400000L)
(setq D3DSTATUS_CLIPINTERSECTIONGEN5 0x00800000L)
(setq D3DSTATUS_ZNOTVISIBLE 0x01000000L)
(setq D3DSTATUS_CLIPUNIONALL 0x00000FFFL)
(setq D3DSTATUS_CLIPINTERSECTIONALL 0x00FFF000L)
(setq D3DSTATUS_DEFAULT 0x01FFF000L)
;; };

;; mask DWORD d3dprocessverticesFlags {
(setq D3DPROCESSVERTICES_TRANSFORMLIGHT 0x00000000L)
(setq D3DPROCESSVERTICES_TRANSFORM 0x00000001L)
(setq D3DPROCESSVERTICES_COPY 0x00000002L)
(setq D3DPROCESSVERTICES_OPMASK 0x00000007L)
(setq D3DPROCESSVERTICES_UPDATEEXTENTS 0x00000008L)
(setq D3DPROCESSVERTICES_NOCOLOR 0x00000010L)
;; };







;; value DWORD D3DBLEND {
(setq D3DBLEND_ZERO 1)
(setq D3DBLEND_ONE 2)
(setq D3DBLEND_SRCCOLOR 3)
(setq D3DBLEND_INVSRCCOLOR 4)
(setq D3DBLEND_SRCALPHA 5)
(setq D3DBLEND_INVSRCALPHA 6)
(setq D3DBLEND_DESTALPHA 7)
(setq D3DBLEND_INVDESTALPHA 8)
(setq D3DBLEND_DESTCOLOR 9)
(setq D3DBLEND_INVDESTCOLOR 10)
(setq D3DBLEND_SRCALPHASAT 11)
(setq D3DBLEND_BOTHSRCALPHA 12)
(setq D3DBLEND_BOTHINVSRCALPHA 13)
(setq D3DBLEND_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DTEXTURESTAGESTATETYPE {
(setq D3DTSS_COLOROP 1)
(setq D3DTSS_COLORARG1 2)
(setq D3DTSS_COLORARG2 3)
(setq D3DTSS_ALPHAOP 4)
(setq D3DTSS_ALPHAARG1 5)
(setq D3DTSS_ALPHAARG2 6)
(setq D3DTSS_BUMPENVMAT00 7)
(setq D3DTSS_BUMPENVMAT01 8)
(setq D3DTSS_BUMPENVMAT10 9)
(setq D3DTSS_BUMPENVMAT11 10)
(setq D3DTSS_TEXCOORDINDEX 11)
(setq D3DTSS_ADDRESS 12)
(setq D3DTSS_ADDRESSU 13)
(setq D3DTSS_ADDRESSV 14)
(setq D3DTSS_BORDERCOLOR 15)
(setq D3DTSS_MAGFILTER 16)
(setq D3DTSS_MINFILTER 17)
(setq D3DTSS_MIPFILTER 18)
(setq D3DTSS_MIPMAPLODBIAS 19)
(setq D3DTSS_MAXMIPLEVEL 20)
(setq D3DTSS_MAXANISOTROPY 21)
(setq D3DTSS_BUMPENVLSCALE 22)
(setq D3DTSS_BUMPENVLOFFSET 23)
(setq D3DTSS_TEXTURETRANSFORMFLAGS 24)
(setq D3DTSS_ADDRESSW 25)
(setq D3DTSS_COLORARG0 26)
(setq D3DTSS_ALPHAARG0 27)
(setq D3DTSS_RESULTARG 28)
(setq D3DTSS_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DSHADEMODE {
(setq D3DSHADE_FLAT 1)
(setq D3DSHADE_GOURAUD 2)
(setq D3DSHADE_PHONG 3)
(setq D3DSHADE_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DTEXTUREMAGFILTER {
(setq D3DTFG_POINT 1)
(setq D3DTFG_LINEAR 2)
(setq D3DTFG_FLATCUBIC 3)
(setq D3DTFG_GAUSSIANCUBIC 4)
(setq D3DTFG_ANISOTROPIC 5)
(setq D3DTFG_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DCMPFUNC {
(setq D3DCMP_NEVER 1)
(setq D3DCMP_LESS 2)
(setq D3DCMP_EQUAL 3)
(setq D3DCMP_LESSEQUAL 4)
(setq D3DCMP_GREATER 5)
(setq D3DCMP_NOTEQUAL 6)
(setq D3DCMP_GREATEREQUAL 7)
(setq D3DCMP_ALWAYS 8)
(setq D3DCMP_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DFILLMODE {
(setq D3DFILL_POINT 1)
(setq D3DFILL_WIREFRAME 2)
(setq D3DFILL_SOLID 3)
(setq D3DFILL_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DSTATEBLOCKTYPE {
(setq D3DSBT_ALL 1)
(setq D3DSBT_PIXELSTATE 2)
(setq D3DSBT_VERTEXSTATE 3)
(setq D3DSBT_FORCE_DWORD 0xffffffff)
;; };

;; value DWORD D3DVERTEXBLENDFLAGS {
(setq D3DVBLEND_DISABLE 0)
(setq D3DVBLEND_1WEIGHT 1)
(setq D3DVBLEND_2WEIGHTS 2)
(setq D3DVBLEND_3WEIGHTS 3)
;; };

;; value DWORD D3DTEXTUREOP {
(setq D3DTOP_DISABLE 1)
(setq D3DTOP_SELECTARG1 2)
(setq D3DTOP_SELECTARG2 3)
(setq D3DTOP_MODULATE 4)
(setq D3DTOP_MODULATE2X 5)
(setq D3DTOP_MODULATE4X 6)
(setq D3DTOP_ADD 7)
(setq D3DTOP_ADDSIGNED 8)
(setq D3DTOP_ADDSIGNED2X 9)
(setq D3DTOP_SUBTRACT 10)
(setq D3DTOP_ADDSMOOTH 11)
(setq D3DTOP_BLENDDIFFUSEALPHA 12)
(setq D3DTOP_BLENDTEXTUREALPHA 13)
(setq D3DTOP_BLENDFACTORALPHA 14)
(setq D3DTOP_BLENDTEXTUREALPHAPM 15)
(setq D3DTOP_BLENDCURRENTALPHA 16)
(setq D3DTOP_PREMODULATE 17)
(setq D3DTOP_MODULATEALPHA_ADDCOLOR 18)
(setq D3DTOP_MODULATECOLOR_ADDALPHA 19)
(setq D3DTOP_MODULATEINVALPHA_ADDCOLOR 20)
(setq D3DTOP_MODULATEINVCOLOR_ADDALPHA 21)
(setq D3DTOP_BUMPENVMAP 22)
(setq D3DTOP_BUMPENVMAPLUMINANCE 23)
(setq D3DTOP_DOTPRODUCT3 24)
(setq D3DTOP_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DCULL {
(setq D3DCULL_NONE 1)
(setq D3DCULL_CW 2)
(setq D3DCULL_CCW 3)
(setq D3DCULL_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DSTENCILOP {
(setq D3DSTENCILOP_KEEP 1)
(setq D3DSTENCILOP_ZERO 2)
(setq D3DSTENCILOP_REPLACE 3)
(setq D3DSTENCILOP_INCRSAT 4)
(setq D3DSTENCILOP_DECRSAT 5)
(setq D3DSTENCILOP_INVERT 6)
(setq D3DSTENCILOP_INCR 7)
(setq D3DSTENCILOP_DECR 8)
(setq D3DSTENCILOP_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DTEXTUREBLEND {
(setq D3DTBLEND_DECAL 1)
(setq D3DTBLEND_MODULATE 2)
(setq D3DTBLEND_DECALALPHA 3)
(setq D3DTBLEND_MODULATEALPHA 4)
(setq D3DTBLEND_DECALMASK 5)
(setq D3DTBLEND_MODULATEMASK 6)
(setq D3DTBLEND_COPY 7)
(setq D3DTBLEND_ADD 8)
(setq D3DTBLEND_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DZBUFFERTYPE {
(setq D3DZB_FALSE 0)
(setq D3DZB_TRUE 1)
(setq D3DZB_USEW 2)
(setq D3DZB_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DTEXTUREFILTER {
(setq D3DFILTER_NEAREST 1)
(setq D3DFILTER_LINEAR 2)
(setq D3DFILTER_MIPNEAREST 3)
(setq D3DFILTER_MIPLINEAR 4)
(setq D3DFILTER_LINEARMIPNEAREST 5)
(setq D3DFILTER_LINEARMIPLINEAR 6)
(setq D3DFILTER_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DTEXTUREADDRESS {
(setq D3DTADDRESS_WRAP 1)
(setq D3DTADDRESS_MIRROR 2)
(setq D3DTADDRESS_CLAMP 3)
(setq D3DTADDRESS_BORDER 4)
(setq D3DTADDRESS_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DTEXTURETRANSFORMFLAGS {
(setq D3DTTFF_DISABLE 0)
(setq D3DTTFF_COUNT1 1)
(setq D3DTTFF_COUNT2 2)
(setq D3DTTFF_COUNT3 3)
(setq D3DTTFF_COUNT4 4)
(setq D3DTTFF_PROJECTED 256)
(setq D3DTTFF_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DLIGHTTYPE {
(setq D3DLIGHT_POINT 1)
(setq D3DLIGHT_SPOT 2)
(setq D3DLIGHT_DIRECTIONAL 3)
(setq D3DLIGHT_PARALLELPOINT 4)
(setq D3DLIGHT_GLSPOT 5)
(setq D3DLIGHT_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DOPCODE {
(setq D3DOP_POINT 1)
(setq D3DOP_LINE 2)
(setq D3DOP_TRIANGLE 3)
(setq D3DOP_MATRIXLOAD 4)
(setq D3DOP_MATRIXMULTIPLY 5)
(setq D3DOP_STATETRANSFORM 6)
(setq D3DOP_STATELIGHT 7)
(setq D3DOP_STATERENDER 8)
(setq D3DOP_PROCESSVERTICES 9)
(setq D3DOP_TEXTURELOAD 10)
(setq D3DOP_EXIT 11)
(setq D3DOP_BRANCHFORWARD 12)
(setq D3DOP_SPAN 13)
(setq D3DOP_SETSTATUS 14)
(setq D3DOP_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DTEXTUREMINFILTER {
(setq D3DTFN_POINT 1)
(setq D3DTFN_LINEAR 2)
(setq D3DTFN_ANISOTROPIC 3)
(setq D3DTFN_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DLIGHTSTATETYPE {
(setq D3DLIGHTSTATE_MATERIAL 1)
(setq D3DLIGHTSTATE_AMBIENT 2)
(setq D3DLIGHTSTATE_COLORMODEL 3)
(setq D3DLIGHTSTATE_FOGMODE 4)
(setq D3DLIGHTSTATE_FOGSTART 5)
(setq D3DLIGHTSTATE_FOGEND 6)
(setq D3DLIGHTSTATE_FOGDENSITY 7)
(setq D3DLIGHTSTATE_COLORVERTEX 8)
(setq D3DLIGHTSTATE_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DANTIALIASMODE {
(setq D3DANTIALIAS_NONE 0)
(setq D3DANTIALIAS_SORTDEPENDENT 1)
(setq D3DANTIALIAS_SORTINDEPENDENT 2)
(setq D3DANTIALIAS_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DPRIMITIVETYPE {
(setq D3DPT_POINTLIST 1)
(setq D3DPT_LINELIST 2)
(setq D3DPT_LINESTRIP 3)
(setq D3DPT_TRIANGLELIST 4)
(setq D3DPT_TRIANGLESTRIP 5)
(setq D3DPT_TRIANGLEFAN 6)
(setq D3DPT_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DTEXTUREMIPFILTER {
(setq D3DTFP_NONE 1)
(setq D3DTFP_POINT 2)
(setq D3DTFP_LINEAR 3)
(setq D3DTFP_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DMATERIALCOLORSOURCE {
(setq D3DMCS_MATERIAL 0)
(setq D3DMCS_COLOR1 1)
(setq D3DMCS_COLOR2 2)
(setq D3DMCS_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DTRANSFORMSTATETYPE {
(setq D3DTRANSFORMSTATE_WORLD 1)
(setq D3DTRANSFORMSTATE_VIEW 2)
(setq D3DTRANSFORMSTATE_PROJECTION 3)
(setq D3DTRANSFORMSTATE_WORLD1 4)
(setq D3DTRANSFORMSTATE_WORLD2 5)
(setq D3DTRANSFORMSTATE_WORLD3 6)
(setq D3DTRANSFORMSTATE_TEXTURE0 16)
(setq D3DTRANSFORMSTATE_TEXTURE1 17)
(setq D3DTRANSFORMSTATE_TEXTURE2 18)
(setq D3DTRANSFORMSTATE_TEXTURE3 19)
(setq D3DTRANSFORMSTATE_TEXTURE4 20)
(setq D3DTRANSFORMSTATE_TEXTURE5 21)
(setq D3DTRANSFORMSTATE_TEXTURE6 22)
(setq D3DTRANSFORMSTATE_TEXTURE7 23)
(setq D3DTRANSFORMSTATE_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DVERTEXTYPE {
(setq D3DVT_VERTEX 1)
(setq D3DVT_LVERTEX 2)
(setq D3DVT_TLVERTEX 3)
(setq D3DVT_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DFOGMODE {
(setq D3DFOG_NONE 0)
(setq D3DFOG_EXP 1)
(setq D3DFOG_EXP2 2)
(setq D3DFOG_LINEAR 3)
(setq D3DFOG_FORCE_DWORD 0x7fffffff)
;; };

;; value DWORD D3DRENDERSTATETYPE {
(setq D3DRENDERSTATE_ANTIALIAS 2)
(setq D3DRENDERSTATE_TEXTUREPERSPECTIVE 4)
(setq D3DRENDERSTATE_ZENABLE 7)
(setq D3DRENDERSTATE_FILLMODE 8)
(setq D3DRENDERSTATE_SHADEMODE 9)
(setq D3DRENDERSTATE_LINEPATTERN 10)
(setq D3DRENDERSTATE_ZWRITEENABLE 14)
(setq D3DRENDERSTATE_ALPHATESTENABLE 15)
(setq D3DRENDERSTATE_LASTPIXEL 16)
(setq D3DRENDERSTATE_SRCBLEND 19)
(setq D3DRENDERSTATE_DESTBLEND 20)
(setq D3DRENDERSTATE_CULLMODE 22)
(setq D3DRENDERSTATE_ZFUNC 23)
(setq D3DRENDERSTATE_ALPHAREF 24)
(setq D3DRENDERSTATE_ALPHAFUNC 25)
(setq D3DRENDERSTATE_DITHERENABLE 26)
(setq D3DRENDERSTATE_ALPHABLENDENABLE 27)
(setq D3DRENDERSTATE_FOGENABLE 28)
(setq D3DRENDERSTATE_SPECULARENABLE 29)
(setq D3DRENDERSTATE_ZVISIBLE 30)
(setq D3DRENDERSTATE_STIPPLEDALPHA 33)
(setq D3DRENDERSTATE_FOGCOLOR 34)
(setq D3DRENDERSTATE_FOGTABLEMODE 35)
(setq D3DRENDERSTATE_FOGSTART 36)
(setq D3DRENDERSTATE_FOGEND 37)
(setq D3DRENDERSTATE_FOGDENSITY 38)
(setq D3DRENDERSTATE_EDGEANTIALIAS 40)
(setq D3DRENDERSTATE_COLORKEYENABLE 41)
(setq D3DRENDERSTATE_ZBIAS 47)
(setq D3DRENDERSTATE_RANGEFOGENABLE 48)
(setq D3DRENDERSTATE_STENCILENABLE 52)
(setq D3DRENDERSTATE_STENCILFAIL 53)
(setq D3DRENDERSTATE_STENCILZFAIL 54)
(setq D3DRENDERSTATE_STENCILPASS 55)
(setq D3DRENDERSTATE_STENCILFUNC 56)
(setq D3DRENDERSTATE_STENCILREF 57)
(setq D3DRENDERSTATE_STENCILMASK 58)
(setq D3DRENDERSTATE_STENCILWRITEMASK 59)
(setq D3DRENDERSTATE_TEXTUREFACTOR 60)
(setq D3DRENDERSTATE_WRAP0 128)
(setq D3DRENDERSTATE_WRAP1 129)
(setq D3DRENDERSTATE_WRAP2 130)
(setq D3DRENDERSTATE_WRAP3 131)
(setq D3DRENDERSTATE_WRAP4 132)
(setq D3DRENDERSTATE_WRAP5 133)
(setq D3DRENDERSTATE_WRAP6 134)
(setq D3DRENDERSTATE_WRAP7 135)
(setq D3DRENDERSTATE_CLIPPING 136)
(setq D3DRENDERSTATE_LIGHTING 137)
(setq D3DRENDERSTATE_EXTENTS 138)
(setq D3DRENDERSTATE_AMBIENT 139)
(setq D3DRENDERSTATE_FOGVERTEXMODE 140)
(setq D3DRENDERSTATE_COLORVERTEX 141)
(setq D3DRENDERSTATE_LOCALVIEWER 142)
(setq D3DRENDERSTATE_NORMALIZENORMALS 143)
(setq D3DRENDERSTATE_COLORKEYBLENDENABLE 144)
(setq D3DRENDERSTATE_DIFFUSEMATERIALSOURCE 145)
(setq D3DRENDERSTATE_SPECULARMATERIALSOURCE 146)
(setq D3DRENDERSTATE_AMBIENTMATERIALSOURCE 147)
(setq D3DRENDERSTATE_EMISSIVEMATERIALSOURCE 148)
(setq D3DRENDERSTATE_VERTEXBLEND 151)
(setq D3DRENDERSTATE_CLIPPLANEENABLE 152)
(setq D3DRENDERSTATE_TEXTUREHANDLE 1)
(setq D3DRENDERSTATE_TEXTUREADDRESS 3)
(setq D3DRENDERSTATE_WRAPU 5)
(setq D3DRENDERSTATE_WRAPV 6)
(setq D3DRENDERSTATE_MONOENABLE 11)
(setq D3DRENDERSTATE_ROP2 12)
(setq D3DRENDERSTATE_PLANEMASK 13)
(setq D3DRENDERSTATE_TEXTUREMAG 17)
(setq D3DRENDERSTATE_TEXTUREMIN 18)
(setq D3DRENDERSTATE_TEXTUREMAPBLEND 21)
(setq D3DRENDERSTATE_SUBPIXEL 31)
(setq D3DRENDERSTATE_SUBPIXELX 32)
(setq D3DRENDERSTATE_STIPPLEENABLE 39)
(setq D3DRENDERSTATE_BORDERCOLOR 43)
(setq D3DRENDERSTATE_TEXTUREADDRESSU 44)
(setq D3DRENDERSTATE_TEXTUREADDRESSV 45)
(setq D3DRENDERSTATE_MIPMAPLODBIAS 46)
(setq D3DRENDERSTATE_ANISOTROPY 49)
(setq D3DRENDERSTATE_FLUSHBATCH 50)
(setq D3DRENDERSTATE_STIPPLEPATTERN00 64)
(setq D3DRENDERSTATE_STIPPLEPATTERN01 65)
(setq D3DRENDERSTATE_STIPPLEPATTERN02 66)
(setq D3DRENDERSTATE_STIPPLEPATTERN03 67)
(setq D3DRENDERSTATE_STIPPLEPATTERN04 68)
(setq D3DRENDERSTATE_STIPPLEPATTERN05 69)
(setq D3DRENDERSTATE_STIPPLEPATTERN06 70)
(setq D3DRENDERSTATE_STIPPLEPATTERN07 71)
(setq D3DRENDERSTATE_STIPPLEPATTERN08 72)
(setq D3DRENDERSTATE_STIPPLEPATTERN09 73)
(setq D3DRENDERSTATE_STIPPLEPATTERN10 74)
(setq D3DRENDERSTATE_STIPPLEPATTERN11 75)
(setq D3DRENDERSTATE_STIPPLEPATTERN12 76)
(setq D3DRENDERSTATE_STIPPLEPATTERN13 77)
(setq D3DRENDERSTATE_STIPPLEPATTERN14 78)
(setq D3DRENDERSTATE_STIPPLEPATTERN15 79)
(setq D3DRENDERSTATE_STIPPLEPATTERN16 80)
(setq D3DRENDERSTATE_STIPPLEPATTERN17 81)
(setq D3DRENDERSTATE_STIPPLEPATTERN18 82)
(setq D3DRENDERSTATE_STIPPLEPATTERN19 83)
(setq D3DRENDERSTATE_STIPPLEPATTERN20 84)
(setq D3DRENDERSTATE_STIPPLEPATTERN21 85)
(setq D3DRENDERSTATE_STIPPLEPATTERN22 86)
(setq D3DRENDERSTATE_STIPPLEPATTERN23 87)
(setq D3DRENDERSTATE_STIPPLEPATTERN24 88)
(setq D3DRENDERSTATE_STIPPLEPATTERN25 89)
(setq D3DRENDERSTATE_STIPPLEPATTERN26 90)
(setq D3DRENDERSTATE_STIPPLEPATTERN27 91)
(setq D3DRENDERSTATE_STIPPLEPATTERN28 92)
(setq D3DRENDERSTATE_STIPPLEPATTERN29 93)
(setq D3DRENDERSTATE_STIPPLEPATTERN30 94)
(setq D3DRENDERSTATE_STIPPLEPATTERN31 95)
(setq D3DRENDERSTATE_FOGTABLESTART 36)
(setq D3DRENDERSTATE_FOGTABLEEND 37)
(setq D3DRENDERSTATE_FOGTABLEDENSITY 38)
(setq D3DRENDERSTATE_FORCE_DWORD 0x7fffffff)
;; };







;; typedef struct _D3DLINEPATTERN { {
(struct '_D3DLINEPATTERN
    WORD ; wRepeatFactor
    WORD ; wLinePattern
)
(setq D3DLINEPATTERN _D3DLINEPATTERN)
;; } D3DLINEPATTERN

;; typedef struct _D3DPICKRECORD { {
(struct '_D3DPICKRECORD
    BYTE ; bOpcode
    BYTE ; bPad
    DWORD ; dwOffset
    D3DVALUE ; dvZ
)
(setq D3DPICKRECORD _D3DPICKRECORD)
;; } D3DPICKRECORD
(setq LPD3DPICKRECORD (string _D3DPICKRECORD "*"))

;; typedef struct _D3DMATERIAL7 { {
(struct '_D3DMATERIAL7
    D3DCOLORVALUE ; dcvDiffuse
    D3DCOLORVALUE ; dcvAmbient
    D3DCOLORVALUE ; dcvSpecular
    D3DCOLORVALUE ; dcvEmissive
    D3DVALUE ; dvPower
)
(setq D3DMATERIAL7 _D3DMATERIAL7)
;; } D3DMATERIAL7
(setq LPD3DMATERIAL7 (string _D3DMATERIAL7 "*"))

;; typedef struct _D3DLINE { {
(struct '_D3DLINE
    WORD ; wV1
    WORD ; wV2
)
(setq D3DLINE _D3DLINE)
;; } D3DLINE
(setq LPD3DLINE (string _D3DLINE "*"))

;; typedef struct _D3DPOINT { {
(struct '_D3DPOINT
    WORD ; wCount;
    WORD ; wFirst;
)
(setq D3DPOINT _D3DPOINT)
;; } D3DPOINT
(setq LPD3DPOINT (string _D3DPOINT "*"))

;; typedef struct _D3DCLIPSTATUS { {
(struct '_D3DCLIPSTATUS
    DWORD ; dwFlags;
    DWORD ; dwStatus;
    float ; minx
    float ; maxx;
    float ; miny
    float ; maxy;
    float ; minz
    float ; maxz;
)
(setq D3DCLIPSTATUS _D3DCLIPSTATUS)
;; } D3DCLIPSTATUS
(setq LPD3DCLIPSTATUS (string _D3DCLIPSTATUS "*"))

;; typedef struct _D3DBRANCH { {
(struct '_D3DBRANCH
    DWORD ; dwMask;
    DWORD ; dwValue
    BOOL ; bNegate;
    DWORD ; dwOffset;
)
(setq D3DBRANCH _D3DBRANCH)
;; } D3DBRANCH
(setq LPD3DBRANCH (string _D3DBRANCH "*"))

;; typedef struct _D3DDP_PTRSTRIDE { {
(struct '_D3DDP_PTRSTRIDE
    LPVOID ; lpvData
    DWORD ; dwStride
)
(setq D3DDP_PTRSTRIDE _D3DDP_PTRSTRIDE)
;; } D3DDP_PTRSTRIDE

;; typedef struct _D3DDRAWPRIMITIVESTRIDEDDATA { {
(struct '_D3DDRAWPRIMITIVESTRIDEDDATA
    D3DDP_PTRSTRIDE ; position
    D3DDP_PTRSTRIDE ; normal
    D3DDP_PTRSTRIDE ; diffuse
    D3DDP_PTRSTRIDE ; specular
    D3DDP_PTRSTRIDE ; textureCoords
)
(setq D3DDRAWPRIMITIVESTRIDEDDATA _D3DDRAWPRIMITIVESTRIDEDDATA)
;; } D3DDRAWPRIMITIVESTRIDEDDATA
(setq LPD3DDRAWPRIMITIVESTRIDEDDATA (string _D3DDRAWPRIMITIVESTRIDEDDATA "*"))

;; typedef struct _D3DSPAN { {
(struct '_D3DSPAN
    WORD ; wCount;
    WORD ; wFirst;
)
(setq D3DSPAN _D3DSPAN)
;; } D3DSPAN
(setq LPD3DSPAN (string _D3DSPAN "*"))

;; typedef struct _D3DLIGHTINGELEMENT { {
(struct '_D3DLIGHTINGELEMENT
    D3DVECTOR ; dvPosition;
    D3DVECTOR ; dvNormal;
)
(setq D3DLIGHTINGELEMENT _D3DLIGHTINGELEMENT)
;; } D3DLIGHTINGELEMENT
(setq LPD3DLIGHTINGELEMENT (string _D3DLIGHTINGELEMENT "*"))

;; typedef struct _D3DTRIANGLE { {
(struct '_D3DTRIANGLE
    WORD ; wV1
    WORD ; wV2
    WORD ; wV3
    WORD ; wFlags;
)
(setq D3DTRIANGLE _D3DTRIANGLE)
;; } D3DTRIANGLE
(setq LPD3DTRIANGLE (string _D3DTRIANGLE "*"))

;; typedef struct _D3DVERTEX { {
(struct '_D3DVERTEX
    D3DVALUE ; dvX
    D3DVALUE ; dvY
    D3DVALUE ; dvZ
    D3DVALUE ; dvNX
    D3DVALUE ; dvNY
    D3DVALUE ; dvNZ
    D3DVALUE ; dvTU
    D3DVALUE ; dvTV
)
(setq D3DVERTEX _D3DVERTEX)
;; } D3DVERTEX
(setq LPD3DVERTEX (string _D3DVERTEX "*"))

;; typedef struct _D3DSTATE { {
(struct '_D3DSTATE
    DWORD ; dwStateType
    D3DVALUE ; dvArg
)
(setq D3DSTATE _D3DSTATE)
;; } D3DSTATE
(setq LPD3DSTATE (string _D3DSTATE "*"))

;; typedef struct _D3DSTATUS { {
(struct '_D3DSTATUS
    DWORD ; dwFlags;
    DWORD ; dwStatus;
    D3DRECT ; drExtent
)
(setq D3DSTATUS _D3DSTATUS)
;; } D3DSTATUS
(setq LPD3DSTATUS (string _D3DSTATUS "*"))

;; typedef struct _D3DPROCESSVERTICES { {
(struct '_D3DPROCESSVERTICES
    DWORD ; dwFlags;
    WORD ; wStart;
    WORD ; wDest;
    DWORD ; dwCount;
    DWORD ; dwReserved;
)
(setq D3DPROCESSVERTICES _D3DPROCESSVERTICES)
;; } D3DPROCESSVERTICES
(setq LPD3DPROCESSVERTICES (string _D3DPROCESSVERTICES "*"))

;; typedef struct _D3DHVERTEX { {
(struct '_D3DHVERTEX
    DWORD ; dwFlags;
    D3DVALUE ; dvHX
    D3DVALUE ; dvHY
    D3DVALUE ; dvHZ
)
(setq D3DHVERTEX _D3DHVERTEX)
;; } D3DHVERTEX
(setq LPD3DHVERTEX (string _D3DHVERTEX "*"))

;; typedef struct _D3DLVERTEX { {
(struct '_D3DLVERTEX
    D3DVALUE ; dvX
    D3DVALUE ; dvY
    D3DVALUE ; dvZ
    DWORD ; dwReserved
    D3DCOLOR ; dcColor
    D3DCOLOR ; dcSpecular
    D3DVALUE ; dvTU
    D3DVALUE ; dvTV
)
(setq D3DLVERTEX _D3DLVERTEX)
;; } D3DLVERTEX
(setq LPD3DLVERTEX (string _D3DLVERTEX "*"))

;; typedef struct _D3DLIGHT2 { {
(struct '_D3DLIGHT2
    DWORD ; dwSize
    D3DLIGHTTYPE ; dltType;
    D3DCOLORVALUE ; dcvColor;
    D3DVECTOR ; dvPosition;
    D3DVECTOR ; dvDirection;
    D3DVALUE ; dvRange;
    D3DVALUE ; dvFalloff;
    D3DVALUE ; dvAttenuation0;
    D3DVALUE ; dvAttenuation1;
    D3DVALUE ; dvAttenuation2;
    D3DVALUE ; dvTheta;
    D3DVALUE ; dvPhi;
    DWORD ; dwFlags
)
(setq D3DLIGHT2 _D3DLIGHT2)
;; } D3DLIGHT2
(setq LPD3DLIGHT2 (string _D3DLIGHT2 "*"))

;; typedef struct _D3DEXECUTEDATA { {
(struct '_D3DEXECUTEDATA
    DWORD ; dwSize
    DWORD ; dwVertexOffset
    DWORD ; dwVertexCount
    DWORD ; dwInstructionOffset
    DWORD ; dwInstructionLength
    DWORD ; dwHVertexOffset
    D3DSTATUS ; dsStatus;
)
(setq D3DEXECUTEDATA _D3DEXECUTEDATA)
;; } D3DEXECUTEDATA
(setq LPD3DEXECUTEDATA (string _D3DEXECUTEDATA "*"))

;; typedef struct _D3DSTATS { {
(struct '_D3DSTATS
    DWORD ; dwSize
    DWORD ; dwTrianglesDrawn
    DWORD ; dwLinesDrawn
    DWORD ; dwPointsDrawn
    DWORD ; dwSpansDrawn
    DWORD ; dwVerticesProcessed
)
(setq D3DSTATS _D3DSTATS)
;; } D3DSTATS
(setq LPD3DSTATS (string _D3DSTATS "*"))

;; typedef struct _D3DMATERIAL { {
(struct '_D3DMATERIAL
    DWORD ; dwSize
    D3DCOLORVALUE ; dcvDiffuse
    D3DCOLORVALUE ; dcvAmbient
    D3DCOLORVALUE ; dcvSpecular
    D3DCOLORVALUE ; dcvEmissive
    D3DVALUE ; dvPower
    D3DTEXTUREHANDLE ; hTexture;
    DWORD ; dwRampSize
)
(setq D3DMATERIAL _D3DMATERIAL)
;; } D3DMATERIAL
(setq LPD3DMATERIAL (string _D3DMATERIAL "*"))

;; typedef struct _D3DLIGHT7 { {
(struct '_D3DLIGHT7
    D3DLIGHTTYPE ; dltType;
    D3DCOLORVALUE ; dcvDiffuse;
    D3DCOLORVALUE ; dcvSpecular;
    D3DCOLORVALUE ; dcvAmbient;
    D3DVECTOR ; dvPosition;
    D3DVECTOR ; dvDirection;
    D3DVALUE ; dvRange;
    D3DVALUE ; dvFalloff;
    D3DVALUE ; dvAttenuation0;
    D3DVALUE ; dvAttenuation1;
    D3DVALUE ; dvAttenuation2;
    D3DVALUE ; dvTheta;
    D3DVALUE ; dvPhi;
)
(setq D3DLIGHT7 _D3DLIGHT7)
;; } D3DLIGHT7
(setq LPD3DLIGHT7 (string _D3DLIGHT7 "*"))

;; typedef struct _D3DTEXTURELOAD { {
(struct '_D3DTEXTURELOAD
    D3DTEXTUREHANDLE ; hDestTexture
    D3DTEXTUREHANDLE ; hSrcTexture
)
(setq D3DTEXTURELOAD _D3DTEXTURELOAD)
;; } D3DTEXTURELOAD
(setq LPD3DTEXTURELOAD (string _D3DTEXTURELOAD "*"))

;; typedef struct _D3DVIEWPORT2 { {
(struct '_D3DVIEWPORT2
    DWORD ; dwSize
    DWORD ; dwX
    DWORD ; dwY;
    DWORD ; dwWidth
    DWORD ; dwHeight;
    D3DVALUE ; dvClipX;
    D3DVALUE ; dvClipY
    D3DVALUE ; dvClipWidth;
    D3DVALUE ; dvClipHeight
    D3DVALUE ; dvMinZ;
    D3DVALUE ; dvMaxZ
)
(setq D3DVIEWPORT2 _D3DVIEWPORT2)
;; } D3DVIEWPORT2
(setq LPD3DVIEWPORT2 (string _D3DVIEWPORT2 "*"))

;; typedef struct _D3DMATRIX { {
(struct '_D3DMATRIX
    D3DVALUE ; _11
    D3DVALUE ; _12
    D3DVALUE ; _13
    D3DVALUE ; _14
    D3DVALUE ; _21
    D3DVALUE ; _22
    D3DVALUE ; _23
    D3DVALUE ; _24
    D3DVALUE ; _31
    D3DVALUE ; _32
    D3DVALUE ; _33
    D3DVALUE ; _34
    D3DVALUE ; _41
    D3DVALUE ; _42
    D3DVALUE ; _43
    D3DVALUE ; _44
)
(setq D3DMATRIX _D3DMATRIX)
;; } D3DMATRIX
(setq LPD3DMATRIX (string _D3DMATRIX "*"))

;; typedef struct _D3DMATRIXLOAD { {
(struct '_D3DMATRIXLOAD
    D3DMATRIXHANDLE ; hDestMatrix;
    D3DMATRIXHANDLE ; hSrcMatrix;
)
(setq D3DMATRIXLOAD _D3DMATRIXLOAD)
;; } D3DMATRIXLOAD
(setq LPD3DMATRIXLOAD (string _D3DMATRIXLOAD "*"))

;; typedef struct _D3DMATRIXMULTIPLY { {
(struct '_D3DMATRIXMULTIPLY
    D3DMATRIXHANDLE ; hDestMatrix;
    D3DMATRIXHANDLE ; hSrcMatrix1;
    D3DMATRIXHANDLE ; hSrcMatrix2;
)
(setq D3DMATRIXMULTIPLY _D3DMATRIXMULTIPLY)
;; } D3DMATRIXMULTIPLY
(setq LPD3DMATRIXMULTIPLY (string _D3DMATRIXMULTIPLY "*"))

;; typedef struct _D3DTRANSFORMDATA { {
(struct '_D3DTRANSFORMDATA
    DWORD ; dwSize
    LPVOID ; lpIn;
    DWORD ; dwInSize;
    LPVOID ; lpOut;
    DWORD ; dwOutSize;
    LPD3DHVERTEX ; lpHOut;
    DWORD ; dwClip;
    DWORD ; dwClipIntersection
    DWORD ; dwClipUnion;
    D3DRECT ; drExtent;
)
(setq D3DTRANSFORMDATA _D3DTRANSFORMDATA)
;; } D3DTRANSFORMDATA
(setq LPD3DTRANSFORMDATA (string _D3DTRANSFORMDATA "*"))

;; typedef struct _D3DVERTEXBUFFERDESC { {
(struct '_D3DVERTEXBUFFERDESC
    DWORD ; dwSize
    DWORD ; dwCaps
    DWORD ; dwFVF
    DWORD ; dwNumVertices
)
(setq D3DVERTEXBUFFERDESC _D3DVERTEXBUFFERDESC)
;; } D3DVERTEXBUFFERDESC
(setq LPD3DVERTEXBUFFERDESC (string _D3DVERTEXBUFFERDESC "*"))

;; typedef struct _D3DVIEWPORT7 { {
(struct '_D3DVIEWPORT7
    DWORD ; dwX
    DWORD ; dwY;
    DWORD ; dwWidth
    DWORD ; dwHeight;
    D3DVALUE ; dvMinZ;
    D3DVALUE ; dvMaxZ
)
(setq D3DVIEWPORT7 _D3DVIEWPORT7)
;; } D3DVIEWPORT7
(setq LPD3DVIEWPORT7 (string _D3DVIEWPORT7 "*"))

;; typedef struct _D3DLIGHT { {
(struct '_D3DLIGHT
    DWORD ; dwSize
    D3DLIGHTTYPE ; dltType;
    D3DCOLORVALUE ; dcvColor;
    D3DVECTOR ; dvPosition;
    D3DVECTOR ; dvDirection;
    D3DVALUE ; dvRange;
    D3DVALUE ; dvFalloff;
    D3DVALUE ; dvAttenuation0;
    D3DVALUE ; dvAttenuation1;
    D3DVALUE ; dvAttenuation2;
    D3DVALUE ; dvTheta;
    D3DVALUE ; dvPhi;
)
(setq D3DLIGHT _D3DLIGHT)
;; } D3DLIGHT
(setq LPD3DLIGHT (string _D3DLIGHT "*"))

;; typedef struct _D3DTLVERTEX { {
(struct '_D3DTLVERTEX
    D3DVALUE ; dvSX
    D3DVALUE ; dvSY
    D3DVALUE ; dvSZ
    D3DVALUE ; dvRHW
    D3DCOLOR ; dcColor
    D3DCOLOR ; dcSpecular
    D3DVALUE ; dvTU
    D3DVALUE ; dvTV
)
(setq D3DTLVERTEX _D3DTLVERTEX)
;; } D3DTLVERTEX
(setq LPD3DTLVERTEX (string _D3DTLVERTEX "*"))

;; typedef struct _D3DVIEWPORT { {
(struct '_D3DVIEWPORT
    DWORD ; dwSize
    DWORD ; dwX
    DWORD ; dwY;
    DWORD ; dwWidth
    DWORD ; dwHeight;
    D3DVALUE ; dvScaleX;
    D3DVALUE ; dvScaleY;
    D3DVALUE ; dvMaxX;
    D3DVALUE ; dvMaxY;
    D3DVALUE ; dvMinZ
    D3DVALUE ; dvMaxZ;
)
(setq D3DVIEWPORT _D3DVIEWPORT)
;; } D3DVIEWPORT
(setq LPD3DVIEWPORT (string _D3DVIEWPORT "*"))

;; typedef struct _D3DINSTRUCTION { {
(struct '_D3DINSTRUCTION
    BYTE ; bOpcode;
    BYTE ; bSize;
    WORD ; wCount;
)
(setq D3DINSTRUCTION _D3DINSTRUCTION)
;; } D3DINSTRUCTION
(setq LPD3DINSTRUCTION (string _D3DINSTRUCTION "*"))

;; typedef struct _D3DLIGHTDATA { {
(struct '_D3DLIGHTDATA
    DWORD ; dwSize
    LPD3DLIGHTINGELEMENT ; lpIn;
    DWORD ; dwInSize;
    LPD3DTLVERTEX ; lpOut;
    DWORD ; dwOutSize;
)
(setq D3DLIGHTDATA _D3DLIGHTDATA)
;; } D3DLIGHTDATA
(setq LPD3DLIGHTDATA (string _D3DLIGHTDATA "*"))






